--
--Copyright (c) Microsoft Corporation
--All rights reserved.
--
--Licensed under the Apache License, Version 2.0 (the ""License""); you
--may not use this file except in compliance with the License. You may
--obtain a copy of the License at
--
--http://www.apache.org/licenses/LICENSE-2.0
--
--THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
--CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
--LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
--A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
--See the Apache Version 2.0 License for specific language governing
--permissions and limitations under the License.
--
--
#include <externals.blk>
--This function is designed to test some of the vector functions in the library

fun comp test() { 


var y :arr[100] int32;
var z :arr[10] complex16;

(x:arr[20] int32) <- takes 20;
	
	do{
		zero_int32(y);
		
		v_add_int32(y[ 0,10],x[0,10],x[10,10]);

		v_sub_int32(y[10,10],x[0,10],x[10,10]);

		y[20] := v_sum_int32(x[0,10]);

		v_hadd_int32(y[30,4],x[0,4]);		

		v_shift_right_int32( y[50,10],x[0,10],3);

		v_shift_left_int32(  y[60,10],x[0,10],3);



		z[0]  := complex16{re = 132;im = 4578};
		z[1]  := complex16{re = 432;im = -778};
		z[2]  := complex16{re = 153;im = -588};
		z[3]  := complex16{re = -32;im = 4568};
		z[4]  := complex16{re = 232;im = 4548};
		z[5]  := complex16{re = 125;im = -538};
		z[6]  := complex16{re = 127;im = 4518};
		z[7]  := complex16{re = 382;im = -578};
		z[8]  := complex16{re = 132;im = 1578};
		z[9]  := complex16{re = 332;im = 3578};
		
		v_conj_mul_complex16_int32(y[70,5],y[80,5],z[0,5],z[5,5])
 };
	 
emits y;
	

	
}

let comp main = read >>> repeat test() >>> write
